services:
  # FastAPI Backend
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://secuser:secpass123@db:5432/securitytoolkit
      - REDIS_URL=redis://redis:6379
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./logs:/app/logs
    networks:
      - security-net
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=securitytoolkit
      - POSTGRES_USER=secuser
      - POSTGRES_PASSWORD=secpass123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - security-net
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U secuser -d securitytoolkit"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  # Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    networks:
      - security-net
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Nginx for serving frontend and reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - api
    networks:
      - security-net
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  security-net:
    driver: bridge